---

 - hosts: all
   become: true

#   environment:
#     http_proxy: http://127.0.0.1:3128
#     https_proxy: http://127.0.0.1:3128

   roles:
   - role: firewall
   - role: create_docker_network
#  - role: nginx
#  - role: nexus
   - role: jenkins
#   - role: oracle
#   - role: postgresql
#   - role: sonarqube


# create nexus and add to network if defined
# create jenkins and add to network if defined
# create sonarqube & postgres and add to network if defined
# create oracle image and add to network if defined
# change jenkins initial password
# Create manual jenkins job to confirm that jenkins can talk to sonarqube / nexus / oracle

# create jenkins job via curl/rest api - Job should be a jobdsl job that literally uses a jenkinsfile from a github repo
# run Jenkins job manually 
# run jenkins job automatically on commit

# Talend??


#{
#"name": "docker1",
#"type": "groovy",
#"content": "import org.sonatype.nexus.repository.Repository; import org.sonatype.nexus.repository.storage.WritePolicy; blobStore.createFileBlobStore('dockerblob', 'dockerblob'); repository.createDockerHosted('docker-production', 5000, 5001, 'dockerblob', true, true, WritePolicy.ALLOW_ONCE)"
#}

# curl -v -X POST -u admin:admin123 --header "Content-Type: application/json" 'http://localhost:8081/service/rest/v1/script' -d @docker1.json

# curl -X POST -u admin:admin123 --header "Content-Type: text/plain" 'http://localhost:8081/service/rest/v1/script/docker1/run'




...
